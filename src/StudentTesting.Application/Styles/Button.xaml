<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ap="clr-namespace:StudentTesting.Application.Styles.AttachedProperty">
    <Style
        x:Key="MaterialButton"
        TargetType="{x:Type Button}">
        <Setter
            Property="OverridesDefaultStyle"
            Value="True" />

        <Setter
            Property="FontWeight"
            Value="Bold" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Cursor"
            Value="Hand" />
        <Setter
            Property="ap:Border.BorderCornerRadius"
            Value="5" />

        <Setter
            Property="BorderThickness"
            Value="1" />

        <Setter
            Property="ap:ExecuteCommand.LoadingContent"
            Value="ЗАГРУЗКА..." />

        <Setter
            Property="Padding"
            Value="0 3" />

        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="{TemplateBinding ap:Border.BorderCornerRadius}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">
                        <Grid>
                            <ContentControl
                                TabIndex="-1"
                                x:Name="MainContent"
                                Content="{TemplateBinding Content}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            <ContentControl
                                TabIndex="-1"
                                Visibility="Collapsed"
                                x:Name="LoadingContent"
                                Content="{TemplateBinding ap:ExecuteCommand.LoadingContent}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="Background"
                                Value="Gray" />
                            <Setter
                                Property="BorderBrush"
                                Value="Gray" />
                        </Trigger>
                        <Trigger
                            Property="ap:ExecuteCommand.IsRunning"
                            Value="True">
                            <Setter
                                TargetName="MainContent"
                                Property="Visibility"
                                Value="Collapsed" />
                            <Setter
                                TargetName="LoadingContent"
                                Property="Visibility"
                                Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="PrimaryMaterialButton"
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource MaterialButton}">
        <Setter
            Property="BorderBrush"
            Value="{DynamicResource PrimaryColor}" />
        <Setter
            Property="Background"
            Value="{DynamicResource PrimaryColor}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource PrimaryFontColor}" />
        <Style.Triggers>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource PrimaryDarkColor}" />
                <Setter
                    Property="BorderBrush"
                    Value="{DynamicResource PrimaryDarkColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="SecodaryMaterialButton"
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource MaterialButton}">
        <Setter
            Property="BorderBrush"
            Value="{DynamicResource PrimaryColor}" />
        <Setter
            Property="Background"
            Value="#ffffff" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource PrimaryColor}" />
        <Style.Triggers>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource PrimaryColor}" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource PrimaryFontColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="DangerousMaterialButton"
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource MaterialButton}">
        <Setter
            Property="BorderBrush"
            Value="{DynamicResource DangerousColor}" />
        <Setter
            Property="Background"
            Value="{DynamicResource DangerousForegroundColor}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource DangerousColor}" />
        <Style.Triggers>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource DangerousColor}" />
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource DangerousForegroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>